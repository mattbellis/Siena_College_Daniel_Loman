import numpy as np
import csv
from numpy import matrix, linalg
import math
import pylab
from pylab import *
import glob
import re


datafile0='/Users/DanLo1108/Documents/AdvancedLab/Github/data/dataset0.txt'
datafile1='/Users/DanLo1108/Documents/AdvancedLab/Github/data/dataset1.txt'
datafile2='/Users/DanLo1108/Documents/AdvancedLab/Github/data/dataset2.txt'
datafile3='/Users/DanLo1108/Documents/AdvancedLab/Github/data/dataset3.txt'
datafile4='/Users/DanLo1108/Documents/AdvancedLab/Github/data/dataset4.txt'


### import datafile0 ###

infile = open(datafile0,'r')       
lines=infile.readlines()

N0=len(lines)
data0=matrix([[0.0]*2]*N0)
index=0

for i in range(N0):
    content = np.array(lines[i].split()).astype('float')
    data0[index,0] = content[0]
    data0[index,1] = content[1]
    index=index+1




### import datafile1 ###

infile = open(datafile1,'r')       
lines=infile.readlines()

N1=len(lines)
data1=matrix([[0.0]*2]*N1)
index=0

for i in range(N1):
    content = np.array(lines[i].split()).astype('float')
    data1[index,0] = content[0]
    data1[index,1] = content[1]
    index=index+1




### import datafile2 ###

infile = open(datafile2,'r')       
lines=infile.readlines()

N2=len(lines)
data2=matrix([[0.0]*2]*N2)
index=0

for i in range(N2):
    content = np.array(lines[i].split()).astype('float')
    data2[index,0] = content[0]
    data2[index,1] = content[1]
    index=index+1



### import datafile3 ###

infile = open(datafile3,'r')       
lines=infile.readlines()

N3=len(lines)
data3=matrix([[0.0]*2]*N3)
index=0

for i in range(N3):
    content = np.array(lines[i].split()).astype('float')
    data3[index,0] = content[0]
    data3[index,1] = content[1]
    index=index+1




### import datafile4 ###

infile = open(datafile4,'r')       
lines=infile.readlines()

N4=len(lines)
data4=matrix([[0.0]*2]*N4)
index=0

for i in range(N4):
    content = np.array(lines[i].split()).astype('float')
    data4[index,0] = content[0]
    data4[index,1] = content[1]
    index=index+1




### Dataset0 ###

ave0=matrix([[0.0]*2]*1)

for i in range(N0):
    ave0[0,0]=ave0[0,0]+data0[i,0]
    ave0[0,1]=ave0[0,1]+data0[i,1]

ave0=ave0/N0
normal0=data0-ave0

Cov0=normal0.T*normal0

Corr0=matrix([[0.0]*len(Cov0)]*len(Cov0.T))

for i in range(len(Cov0)):
    for j in range(len(Cov0.T)):
        Corr0[i,j]=Cov0.T[i,j]/sqrt((Cov0.T[i,i]*Cov0.T[j,j]))


figure()
plot(data0[:,0],data0[:,1],'+')
title('Data set 0 - .57 correlation')
xlabel('x')
ylabel('y')
    


### Dataset1 ###

ave1=matrix([[0.0]*2]*1)

for i in range(N1):
    ave1[0,0]=ave1[0,0]+data1[i,0]
    ave1[0,1]=ave1[0,1]+data1[i,1]

ave1=ave1/N1
normal1=data1-ave1

Cov1=normal1.T*normal1

Corr1=matrix([[0.0]*len(Cov1)]*len(Cov1.T))

for i in range(len(Cov1)):
    for j in range(len(Cov1.T)):
        Corr1[i,j]=Cov1.T[i,j]/sqrt((Cov1.T[i,i]*Cov1.T[j,j]))



figure()
plot(data1[:,0],data1[:,1],'+')
title('Data set 1 - -.79 correlation')
xlabel('x')
ylabel('y')

### Dataset2 ###

ave2=matrix([[0.0]*2]*1)

for i in range(N0):
    ave2[0,0]=ave2[0,0]+data2[i,0]
    ave2[0,1]=ave2[0,1]+data2[i,1]

ave2=ave2/N2
normal2=data2-ave2

Cov2=normal2.T*normal2

Corr2=matrix([[0.0]*len(Cov2)]*len(Cov2.T))

for i in range(len(Cov2)):
    for j in range(len(Cov2.T)):
        Corr2[i,j]=Cov2.T[i,j]/sqrt((Cov2.T[i,i]*Cov2.T[j,j]))


figure()
plot(data2[:,0],data2[:,1],'+')
title('Data set 2 - .02 correlation')
xlabel('x')
ylabel('y')

### Dataset3 ###

ave3=matrix([[0.0]*2]*1)

for i in range(N3):
    ave3[0,0]=ave3[0,0]+data3[i,0]
    ave3[0,1]=ave3[0,1]+data3[i,1]

ave3=ave3/N3
normal3=data3-ave3

Cov3=normal3.T*normal3

Corr3=matrix([[0.0]*len(Cov3)]*len(Cov3.T))

for i in range(len(Cov3)):
    for j in range(len(Cov3.T)):
        Corr3[i,j]=Cov3.T[i,j]/sqrt((Cov3.T[i,i]*Cov3.T[j,j]))
        

figure()
plot(data3[:,0],data3[:,1],'+')
title('Data set 3 - .24 correlation')
xlabel('x')
ylabel('y')

### Dataset4 ###

ave4=matrix([[0.0]*2]*1)

for i in range(N0):
    ave4[0,0]=ave4[0,0]+data4[i,0]
    ave4[0,1]=ave4[0,1]+data4[i,1]

ave4=ave4/N4
normal4=data4-ave4

Cov4=normal4.T*normal4

Corr4=matrix([[0.0]*len(Cov4)]*len(Cov4.T))

for i in range(len(Cov4)):
    for j in range(len(Cov4.T)):
        Corr4[i,j]=Cov4.T[i,j]/sqrt((Cov4.T[i,i]*Cov4.T[j,j]))


figure()
plot(data4[:,0],data4[:,1],'+')
title('Data set 4 - .21 correlation')
xlabel('x')
ylabel('y')


show()


